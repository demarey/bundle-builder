name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "latest10" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
          - os: macos-latest
            arch: arm64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set VM name
        run: echo "VM_DIR=pharo-vm-Darwin-${{ matrix.arch }}-gtk-stable" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install brew
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Install GTK4
        run: brew install gtk4 gtksourceview5 libadwaita


      - name: Install Pharo VM Latest 10
        run: |
          URL="https://files.pharo.org/vm/pharo-spur64-headless/Darwin-arm64/latest10.zip"
          mkdir -p pharo-vm
          echo "Downloading $URL to pharo-vm"
          curl -L $URL -o pharo-vm.zip
          unzip -q pharo-vm.zip -d pharo-vm
          rm -f pharo-vm.zip
        shell: bash

      - name: Get Pharo 13 image
        run: |
          IMAGE_PATH=pharoImage-x86_64.zip
          URL="https://files.pharo.org/get-files/130/pharoImage-${{ matrix.arch }}.zip"
          echo "Downloading $URL"
          curl -L ${URL} -o pharo-image.zip
          unzip pharo-image.zip -d image
          rm -f pharo-image.zip
          find image -name '*.image' -exec mv '{}' ./Pharo.image \;
          find image -name '*.changes' -exec mv '{}' ./Pharo.changes \;
          mv image/*.sources .
          rm -rf image
        shell: bash

      - name: Run Pharo
        run: |
          ./pharo-vm/Pharo.app/Contents/MacOS/Pharo --headless Pharo.image eval "Metacello new repository: 'gitlocal://./src'; baseline: 'BundleBuilder'; load. (Smalltalk globals at: #MacBundleBuilder) makeGTK4Bundle${{ matrix.arch == 'arm64' && 'ARM' || '' }}"
          
          ls -R
          cp -R pharo-vm $VM_DIR
          cp gtk4/* $VM_DIR/Pharo.app/Contents/MacOS/Plugins/
          codesign --remove-signature $VM_DIR/Pharo.app
          codesign --force --deep --sign - $VM_DIR/Pharo.app

      - name: Archive VM
        uses: actions/upload-artifact@v4
        with:
          name: pharo-vm-Darwin-${{ matrix.arch }}-gtk-stable
          path: pharo-vm-Darwin-${{ matrix.arch }}-gtk-stable/*.app

